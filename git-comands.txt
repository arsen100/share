истроия

git log 
выход с истории в консоли
ctr+z

отмена 

1)git checkout     // Переключаемся на ветку  или вернутся к определенному коммиту по хэш   - используется как поиск изминеий после
успешного резульата переключатся в нужную ветку например git checkout master
//например для файлов
2)git reset HEAD /либо хэш   //Везвращает последние изминения или что-то пределенное после сделать git checkout name_file и сделает последнее изминение закомиченное -(без нужных изминений)


//УДАЛЕНИЕ САМИХ КОММИОТОВ  (git revert это коммит который удаляет коммииты предыдущие ,затирает)
можно применять последовательно - будет удалять по очереди
3) git revert HEAD --no -edit   


///=================Ветки(breanche)======================

// посмотреть ветку
git branche 

// создать и перейти в ветку dev
git checkout -b dev

!ветки будут создаватся с тукущей ветки!

//ПЕРЕХОД НА ВЕТКУ
git checkout master


Удаление на локальном компьютере:

git branch --delete <branch>
Удаление на сервере (начания с версии 1.7.0):

git push origin --delete <branch>

//----------------слияние------------
нужно прейти в ветку в которую нужно слить изминеия

при конфликте слияния двух веток -  содержимого одного и ли более файло
- нужно зайти в данный файл в ручную решить что убрать а чо оставить
- сдлеать индексацию (git add)
- сделать пустой коммит - попадет в vim - там нажать "esc"+:wq -записать и выйти


git rebase - слияние веток БЕЗ ИСТОРИИ КОММИТОВ !!!
коммиты будут сохранятся непоследовательно в отличии от merge
rebase - может использовать для локальных веток для команды лучше его не использовать без необходимости 

//——————скачать ветку —————
//git checkout -b <название ветки> origin/<название ветки>
//При этом новая ветка на локальной машине будет создана сама автоматически.

git checkout -b dev  origin/dev

// клонировать ветку (не создастся ветка на локальном хранилище а просто сольется с текущей ветка- хотя проверились еще может и не так)
git clone http://whatever.git -b branch-name

Если ветка уже есть то скачать избиения просто git pull  и при этом быть в текущей ветке (наверное)

